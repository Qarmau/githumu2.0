# Generated by Django 5.0.7 on 2024-08-29 19:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('history', models.TextField(blank=True, editable=False, help_text='Enter each point on a new line', null=True)),
                ('population', models.IntegerField()),
                ('school_motto', models.CharField(max_length=200)),
                ('vision', models.TextField(blank=True, null=True)),
                ('mission', models.TextField(blank=True, null=True)),
                ('subjects_offered', models.TextField(blank=True, editable=False, help_text='Enter each subject on a new line', null=True)),
                ('clubs_and_societies', models.TextField(blank=True, editable=False, help_text='Enter each club/society on a new line', null=True)),
                ('contact_information', models.TextField(help_text='e.g. P.O BOX 001-00001, THIKA.')),
                ('email', models.EmailField(help_text='Enter email to receive emails from users', max_length=254)),
                ('phone_number', models.CharField(help_text='Enter number to receive calls from users. Format: +<country_code> <9_digits>', max_length=20, validators=[django.core.validators.RegexValidator(message='Phone number must be in the format: +<country_code> <9_digits>.', regex='^\\+\\d{1,3} \\d{9}$')])),
            ],
            options={
                'verbose_name': 'About',
                'verbose_name_plural': 'About',
            },
        ),
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('university_admission_rate', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('title', models.CharField(choices=[('Mr', 'Mr'), ('Mrs', 'Mrs'), ('Ms', 'Ms')], max_length=10)),
                ('photo', models.ImageField(upload_to='admin_photos/')),
                ('order', models.IntegerField(default=0)),
                ('role', models.CharField(blank=True, choices=[('CHIEF PRINCIPAL', 'CHIEF PRINCIPAL'), ('DEPUTY PRINCIPAL(ADMIN)', 'DEPUTY PRINCIPAL(ADMIN)'), ('DEPUTY PRINCIPAL(ACAD)', 'DEPUTY PRINCIPAL(ACAD)'), ('DEAN', 'DEAN'), ('HOD MATHEMATICS', 'HOD MATHEMATICS'), ('HOD SCIENCE', 'HOD SCIENCE'), ('HOD ENGLISH', 'HOD ENGLISH'), ('HOD KISWAHILI', 'HOD KISWAHILI'), ('HOD HUMANITIES', 'HOD HUMANITIES'), ('HOD TECHNICALS', 'HOD TECHNICALS'), ('HOD G&C', 'HOD G&C'), ('HOD CAREERS', 'HOD CAREERS'), ('HOD SPORTS', 'HOD SPORTS'), ('HOS', 'HOS')], max_length=100)),
                ('subjects', models.CharField(blank=True, choices=[('BIO & CHEM', 'BIO & CHEM'), ('PHYS & CHEM', 'PHY & CHEM'), ('MATH & PHY', 'MATH & PHY'), ('MATH & CHEM', 'MATH & CHEM'), ('HIS & CRE', 'HIS & CRE'), ('GEO & HIS', 'GEO & HIS'), ('HIS & KIS', 'HIS & KIS'), ('KIS & CRE', 'KIS & CRE'), ('ENG/LIT', 'ENG/LIT'), ('MATH/COMP', 'MATH/COMP'), ('MATH/BUS', 'MATH/BUS'), ('HSC/BIO', 'HSC/BIO'), ('MATH/GEO', 'MATH/GEO'), ('HIS/P.E', 'HIS/P.E')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='BackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='background_images/')),
                ('order', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('event_type', models.CharField(choices=[('event', 'Event'), ('news', 'News')], default='event', max_length=10)),
                ('related_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoCurricularAward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('year', models.IntegerField()),
                ('description', models.TextField()),
                ('photo', models.ImageField(upload_to='award_photos/')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('date', models.DateTimeField()),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='EVENT_images/')),
                ('video_url', models.FileField(blank=True, null=True, upload_to='EVENT_videos/')),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='gallery/')),
                ('caption', models.CharField(max_length=100)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('category', models.CharField(choices=[('events', 'Events'), ('School', 'Our School'), ('students', 'Students'), ('other', 'Staff')], default='other', max_length=20)),
            ],
            options={
                'verbose_name': 'Gallery',
                'verbose_name_plural': 'Gallery',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10)),
                ('content', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='news_images/')),
                ('video_url', models.FileField(blank=True, null=True, upload_to='NEWS_videos/')),
                ('mynews', models.FileField(blank=True, null=True, upload_to='news_info/')),
            ],
            options={
                'verbose_name': 'News',
                'verbose_name_plural': 'News',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TeachingStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('title', models.CharField(choices=[('Mr', 'Mr'), ('Mrs', 'Mrs'), ('Ms', 'Ms')], max_length=10)),
                ('role', models.CharField(blank=True, choices=[('CHIEF PRINCIPAL', 'CHIEF PRINCIPAL'), ('DEPUTY PRINCIPAL(ADMIN)', 'DEPUTY PRINCIPAL(ADMIN)'), ('DEPUTY PRINCIPAL(ACAD)', 'DEPUTY PRINCIPAL(ACAD)'), ('DEAN', 'DEAN'), ('HOD MATHEMATICS', 'HOD MATHEMATICS'), ('HOD SCIENCE', 'HOD SCIENCE'), ('HOD ENGLISH', 'HOD ENGLISH'), ('HOD KISWAHILI', 'HOD KISWAHILI'), ('HOD HUMANITIES', 'HOD HUMANITIES'), ('HOD TECHNICALS', 'HOD TECHNICALS'), ('HOD G&C', 'HOD G&C'), ('HOD CAREERS', 'HOD CAREERS'), ('HOD SPORTS', 'HOD SPORTS'), ('HOS', 'HOS')], max_length=100)),
                ('subjects', models.CharField(choices=[('BIO & CHEM', 'BIO & CHEM'), ('PHYS & CHEM', 'PHY & CHEM'), ('MATH & PHY', 'MATH & PHY'), ('MATH & CHEM', 'MATH & CHEM'), ('HIS & CRE', 'HIS & CRE'), ('GEO & HIS', 'GEO & HIS'), ('HIS & KIS', 'HIS & KIS'), ('KIS & CRE', 'KIS & CRE'), ('ENG/LIT', 'ENG/LIT'), ('MATH/COMP', 'MATH/COMP'), ('MATH/BUS', 'MATH/BUS'), ('HSC/BIO', 'HSC/BIO'), ('MATH/GEO', 'MATH/GEO'), ('HIS/P.E', 'HIS/P.E')], max_length=200)),
                ('photo', models.ImageField(upload_to='staff_photos/')),
                ('order', models.IntegerField(default=0)),
                ('is_administrator', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('teacher', 'Teacher'), ('administrator', 'Administrator')], default='teacher', max_length=20)),
                ('is_active', models.BooleanField(default=False)),
                ('password_reset_token', models.CharField(blank=True, max_length=100, null=True)),
                ('password_reset_token_expiration', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HolidayAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2024, 2024), (2025, 2025), (2026, 2026)], default=2024)),
                ('title', models.CharField(choices=[('April Holiday', 'April Holiday'), ('August Holiday', 'August Holiday'), ('December Holiday', 'December Holiday')], max_length=200)),
                ('grade', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4)], default=1)),
                ('subject', models.CharField(choices=[('MATHEMATICS', 'MATHEMATICS'), ('ENGLISH', 'ENGLISH'), ('KISWAHILI', 'KISWAHILI'), ('CHEMISTRY', 'CHEMISTRY'), ('PHYSICS', 'PHYSICS'), ('BIOLOGY', 'BIOLOGY'), ('BUSINESS STUDIES', 'BUSINESS STUDIES'), ('COMPUTER STUDIES', 'COMPUTER STUDIES'), ('AGRICULTURE', 'AGRICULTURE'), ('HOME SCIENCE', 'HOME SCIENCE'), ('HISTORY', 'HISTORY'), ('GEOGRAPHY', 'GEOGRAPHY'), ('CRE', 'CRE')], max_length=20)),
                ('file', models.FileField(upload_to='assignments/')),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('download_count', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RevisionMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the name of the exam to help students find it easier', max_length=200)),
                ('file', models.FileField(upload_to='revision_materials/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.grade')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.academicyear')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.subject')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.term')),
            ],
        ),
        migrations.CreateModel(
            name='PastPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the name of the exam to help students find it easier', max_length=200)),
                ('file', models.FileField(upload_to='past_papers/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.grade')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.academicyear')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.subject')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.term')),
            ],
        ),
    ]
